import os
import requests
import stripe
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

# üîê Environment Variables
SHOPIFY_STORE = "DevSuggests.com"
SHOPIFY_API_KEY = os.getenv("SHOPIFY_API_KEY")
SHOPIFY_API_SECRET = os.getenv("SHOPIFY_API_SECRET")  # Not used in this script, but good to have
SHOPIFY_ADMIN_TOKEN = os.getenv("SHOPIFY_ADMIN_TOKEN")  # Access token for private app
stripe.api_key = os.getenv("STRIPE_SECRET_KEY")

# ‚úÖ 1. Get all products from Shopify
print("üì¶ Fetching products from Shopify...")

shopify_url = f"https://{SHOPIFY_STORE}/admin/api/2023-10/products.json"
headers = {
    "Content-Type": "application/json",
    "X-Shopify-Access-Token": SHOPIFY_ADMIN_TOKEN,
}

response = requests.get(shopify_url, headers=headers)

if response.status_code != 200:
    print("‚ùå Failed to fetch Shopify products:", response.text)
    exit()

products = response.json().get('products', [])

# ‚úÖ 2. Sync each to Stripe
for product in products:
    print(f"‚û°Ô∏è Creating product in Stripe: {product['title']}")

    try:
        # Create the product in Stripe
        stripe_product = stripe.Product.create(
            name=product['title'],
            description=product.get('body_html', ''),
        )

        # Create a price for the first variant
        variant = product['variants'][0]
        price = stripe.Price.create(
            unit_amount=int(float(variant['price']) * 100),  # Convert to cents
            currency='usd',
            product=stripe_product.id,
        )

        print(f"‚úÖ Synced: {product['title']} (Price: {variant['price']})")

    except Exception as e:
        print(f"‚ùå Error syncing product: {product['title']}")
        print(e)

